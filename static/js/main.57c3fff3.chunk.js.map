{"version":3,"sources":["Routes/PublicRoute.js","container/App/AsyncComponent.js","container/App/index.js","utils/history.js","reportWebVitals.js","components/Common/CustomSpin.js","index.js"],"names":["PublicRoute","Component","component","Layout","layout","rest","render","props","AsyncAppLayout","loadable","AsyncDashboard","AsyncProducts","AsyncOrders","AsyncReviews","AsyncNotFound","withRouter","exact","path","history","createBrowserHistory","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CustomSpin","size","antIcon","customStyle","LoadingOutlined","style","fontSize","color","spin","indicator","ReactDOM","fallback","basename","document","getElementById"],"mappings":"+PAceA,EAXK,SAAC,GAAD,IAAcC,EAAd,EAAGC,UAA8BC,EAAjC,EAAyBC,OAAmBC,EAA5C,6CAClB,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,SAAAC,GAAK,OACX,cAACJ,EAAD,UACE,cAACF,EAAD,eAAeM,W,QCNVC,EAAiBC,aAAS,kBAAM,uEAEhCC,GADoBD,aAAS,kBAAM,kCAClBA,aAAS,kBAAM,8EAChCE,EAAgBF,aAAS,kBAAM,4EAC/BG,EAAcH,aAAS,kBAAM,4EAC7BI,EAAeJ,aAAS,kBAAM,6EAC9BK,EAAgBL,aAAS,kBAAM,gECe7BM,eAjBH,WACR,OACI,cAAC,WAAD,UACI,eAAC,IAAD,WACI,cAAC,EAAD,CAAaC,OAAK,EAACC,KAAK,IAAIb,OAAQI,EAAgBN,UAAWQ,IAC/D,cAAC,EAAD,CAAaO,KAAK,YAAYb,OAAQI,EAAgBN,UAAWS,IACjE,cAAC,EAAD,CAAaM,KAAK,iBAAiBb,OAAQI,EAAgBN,UAAWU,IACtE,cAAC,EAAD,CAAaK,KAAK,WAAWb,OAAQI,EAAgBN,UAAWW,IAChE,cAAC,EAAD,CAAaI,KAAK,cAAcb,OAAQI,EAAgBN,UAAWQ,IAEnE,cAAC,EAAD,CAAaM,OAAK,EAACZ,OAAQI,EAAgBN,UAAWY,Y,OCZvDI,EAFCC,cCUDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gBCMCQ,EATI,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAEZC,GAFoC,EAAlBC,YAER,cAACC,EAAA,EAAD,CAAiBC,MADd,CAAEC,SAAU,OAAQC,MAAO,OACQC,MAAI,KAE1D,OACI,cAAC,IAAD,CAAMC,UAAWP,EAASD,KAAMA,KCIxCS,IAASjC,OACP,cAAC,WAAD,CAAUkC,SAAU,cAAC,EAAD,IAApB,SACE,cAAC,IAAD,CAAQC,SAAS,IAAIvB,QAASA,EAA9B,SACE,cAAC,EAAD,QAGJwB,SAASC,eAAe,SAM1BvB,M","file":"static/js/main.57c3fff3.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nconst PublicRoute = ({ component: Component, layout: Layout, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props => (\r\n      <Layout>\r\n        <Component {...props} />\r\n      </Layout>\r\n    )}\r\n  />\r\n);\r\n\r\nexport default PublicRoute;\r\n","import loadable from '@loadable/component'\r\n\r\nexport const AsyncAppLayout = loadable(() => import('../../components/Layout/AppLayout'))\r\nexport const AsyncPublicLayout = loadable(() => import('../../components/Layout/PublicLayout'))\r\nexport const AsyncDashboard = loadable(() => import('../../container/Dashboard'))\r\nexport const AsyncProducts = loadable(() => import('../../container/Products'))\r\nexport const AsyncOrders = loadable(() => import('../../container/Orders'))\r\nexport const AsyncReviews = loadable(() => import('../../container/Reviews'))\r\nexport const AsyncNotFound = loadable(() => import('../../container/Exceptions/NotFoundContainer'))","import React, { Fragment } from 'react';\r\nimport { Switch, withRouter } from 'react-router-dom'\r\nimport PublicRoute from '../../Routes/PublicRoute';\r\n\r\nimport { AsyncAppLayout, AsyncDashboard, AsyncNotFound, AsyncProducts, AsyncOrders,AsyncReviews } from './AsyncComponent';\r\n\r\nconst App = () => {\r\n    return (\r\n        <Fragment>\r\n            <Switch>\r\n                <PublicRoute exact path='/' layout={AsyncAppLayout} component={AsyncDashboard} />\r\n                <PublicRoute path='/products' layout={AsyncAppLayout} component={AsyncProducts} />\r\n                <PublicRoute path='/orders/manage' layout={AsyncAppLayout} component={AsyncOrders} />\r\n                <PublicRoute path='/reviews' layout={AsyncAppLayout} component={AsyncReviews} />\r\n                <PublicRoute path='/promotions' layout={AsyncAppLayout} component={AsyncDashboard} />\r\n                {/* <PublicRoute path='/finance' layout={AsyncAppLayout} component={AsyncDashboard} /> */}\r\n                <PublicRoute exact layout={AsyncAppLayout} component={AsyncNotFound} />\r\n            </Switch>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default withRouter(App);","import { createBrowserHistory } from 'history';\r\n\r\nconst history = createBrowserHistory();\r\n\r\nexport default history;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport { Spin } from 'antd'\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst CustomSpin = ({ size, customStyle }) => {\r\n    let defaultStyle = { fontSize: '2rem', color: '#00' };\r\n    const antIcon = <LoadingOutlined style={defaultStyle} spin />\r\n\r\n    return (\r\n        <Spin indicator={antIcon} size={size} />\r\n    );\r\n};\r\n\r\nexport default CustomSpin;","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router } from 'react-router-dom';\n\nimport 'antd/dist/antd.css';\nimport './styles/index.scss';\nimport './styles/app.scss';\n\nimport App from './container/App';\nimport history from './utils/history';\nimport reportWebVitals from './reportWebVitals';\nimport CustomSpin from './components/Common/CustomSpin';\n\nReactDOM.render(\n  <Suspense fallback={<CustomSpin />}>\n    <Router basename='/' history={history}>\n      <App />\n    </Router>\n  </Suspense>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}